/*
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *             http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'de.undercouch.download'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def wsUrl = project.properties["WS_URL"]
def wsApiKey = project.properties["WS_API_KEY"]

android {
    namespace 'com.google.mediapipe.examples.handlandmarker'
    compileSdk 35

    defaultConfig {
        applicationId "com.google.mediapipe.examples.handlandmarker"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "WS_URL", "\"${WS_URL}\""
        buildConfigField "String", "WS_API_KEY", "\"${WS_API_KEY}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude '**/*.proto'
        pickFirst "**/google/protobuf/**"
        pickFirst "**/com/google/protobuf/**"
        pickFirst "**/google/protobuf/TimestampProto.class"
        pickFirst "**/com/google/protobuf/TimestampProto.class"
        pickFirst "**/google/protobuf/Any.class"
        pickFirst "**/google/protobuf/ByteString.class"
        pickFirst "**/google/protobuf/CodedInputStream.class"
        pickFirst "**/google/protobuf/CodedOutputStream.class"
        pickFirst "**/google/protobuf/Descriptors.class"
        pickFirst "**/google/protobuf/ExtensionRegistryLite.class"
        pickFirst "**/google/protobuf/GeneratedMessageLite.class"
        pickFirst "**/google/protobuf/Message.class"
        pickFirst "**/google/protobuf/MessageLite.class"
        pickFirst "**/google/protobuf/Parser.class"
    }
}

// import DownloadMPTasks task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
apply from: 'download_tasks.gradle'

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
        force "com.google.protobuf:protobuf-java:3.25.3"
        force "com.google.protobuf:protobuf-kotlin:3.25.3"
    }
}

dependencies {

    // Kotlin lang
    implementation 'androidx.core:core-ktx:1.8.0'

    // App compat and UI things
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.3.0'
    implementation 'androidx.media3:media3-exoplayer:1.7.1'
    implementation 'androidx.media3:media3-ui:1.7.1'

    // Navigation library
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // CameraX core library
    def camerax_version = '1.2.0-alpha02'
    implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    // CameraX View class
    implementation "androidx.camera:camera-view:$camerax_version"

    // WindowManager
    implementation 'androidx.window:window:1.1.0-alpha03'

    // Unit testing
    testImplementation 'junit:junit:4.13.2'

    // Instrumented testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // MediaPipe Library

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // Protobuf dependencies (only kotlin version to avoid conflicts)
    implementation "com.google.protobuf:protobuf-kotlin:3.25.3"

    implementation('com.google.mediapipe:tasks-vision:0.10.14') {
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
    }
    implementation('com.google.mediapipe:tasks-core:0.10.14') {
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
    }

    // grpc
    implementation(project(path: ":grpc", configuration: "default")) {
        exclude group: "com.google.protobuf", module: "protobuf-javalite"
    }
}
